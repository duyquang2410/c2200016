......QUICK_SORT......
#include<stdio.h>

#define MAX_N 100

typedef int keytype;
typedef float othertype;

typedef struct {
	keytype key;
	othertype other;
}record;

void swap(record *a, record *b){
	record temp;
	temp = *a;
	*a = *b;
	*b = temp;
}

int findPivot(record a[], int i, int j){
int k;	keytype firstkey = a[i].key;
    for( k= i+1; k <= j; k++){
        if(a[k].key != firstkey){
            return a[k].key > firstkey ? k : i;
        }        
    }
    return -1;
}

int partition(record a[], int L, int R, keytype pivot){
	while(L <= R){
		while(a[L].key < pivot)
			L++;
		while(a[R].key >= pivot)
			R--;
		if(L < R)
			swap(&a[L], &a[R]);
	}
	return L;
}

void quickSort(record a[], int i, int j){
	int pivotidx = findPivot(a,i,j);
	if(pivotidx != -1){		
		int k = partition(a,i,j, a[pivotidx].key);
		quickSort(a, i, k-1);
		quickSort(a, k, j);
	}	
}

void readFile (record a[], int *n){    
	FILE *f = fopen("data.txt","r");
	if(f!=NULL)
        while (!feof(f)){
            fscanf(f,"%d%f",&a[*n].key , &a[*n].other);
            (*n)++;
        }
    else printf("loi moi file\n ");
	fclose(f);
}

void printData(record a[], int n){
int i;	for(i=0; i < n; i++)
		printf("%3d %5d %8.2f\n", i+1, a[i].key, a[i].other);
}

int main (){
	record a[MAX_N];
	int n = 0;
	printf("Thuat toan Quick Sort\n");
	readFile(a, &n);
	printf("Du lieu truoc khi sap xep:\n");
	printData(a, n);
	quickSort(a, 0, n-1);
	printf("Du lieu sau khi sap xep:\n");
	printData(a, n);
	return 0;
}
......SELECT_SORT......
#include<stdio.h>

#define MAX_N 100

typedef int keytype;
typedef float othertype;

typedef struct {
	keytype key;
	othertype other;
}record;

void swap(record *a, record *b){
	record temp;
	temp = *a;
	*a = *b;
	*b = temp;
}

void selectionSort(record a[], int n){
	for (int i = 0; i < n-1; i++){
		keytype lowkey = a[i].key;
		int lowidx = i;
		for (int j = i+1; j < n; j++){
			if (a[j].key < lowkey){
				lowkey = a[j].key;
				lowidx = j;
			}
		}
		swap(&a[i],&a[lowidx]);
	}
}

void readFile (record a[], int *n){    
	FILE *f = fopen("data.txt","r");
	if(f!=NULL)
        while (!feof(f)){
            fscanf(f,"%d%f",&a[*n].key , &a[*n].other);
            (*n)++;
        }
    else printf("loi moi file\n ");
	fclose(f);
}

void printData(record a[], int n){
	for(int i=0; i < n; i++)
		printf("%3d %5d %8.2f\n", i+1, a[i].key, a[i].other);
}

int main (){
	record a[MAX_N];
	int n = 0;
	printf("Thuat toan Selection Sort\n\n");
	readFile(a, &n);
	printf("Du lieu truoc khi sap xep:\n");
	printData(a, n);
	selectionSort(a, n);
	printf("Du lieu sau khi sap xep:\n");
	printData(a, n);
	return 0;
}
--------ATM_GREADY-----
#include<stdio.h>

#define MAX_N 100

typedef int keytype;
typedef float othertype;

typedef struct {
	keytype key;
	othertype other;
}record;

void swap(record *a, record *b){
	record temp;
	temp = *a;
	*a = *b;
	*b = temp;
}

void selectionSort(record a[], int n){
	for (int i = 0; i < n-1; i++){
		keytype lowkey = a[i].key;
		int lowidx = i;
		for (int j = i+1; j < n; j++){
			if (a[j].key < lowkey){
				lowkey = a[j].key;
				lowidx = j;
			}
		}
		swap(&a[i],&a[lowidx]);
	}
}

void readFile (record a[], int *n){    
	FILE *f = fopen("data.txt","r");
	if(f!=NULL)
        while (!feof(f)){
            fscanf(f,"%d%f",&a[*n].key , &a[*n].other);
            (*n)++;
        }
    else printf("loi moi file\n ");
	fclose(f);
}

void printData(record a[], int n){
	for(int i=0; i < n; i++)
		printf("%3d %5d %8.2f\n", i+1, a[i].key, a[i].other);
}

int main (){
	record a[MAX_N];
	int n = 0;
	printf("Thuat toan Selection Sort\n\n");
	readFile(a, &n);
	printf("Du lieu truoc khi sap xep:\n");
	printData(a, n);
	selectionSort(a, n);
	printf("Du lieu sau khi sap xep:\n");
	printData(a, n);
	return 0;
}
-----CÁI BALO1 GREADY----
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int w, v, qty;
    float ppu; //price per unit
    char name[25];    
} item;

void swap (item *a, item* b){
    item temp = *a;
    *a = *b;
    *b = temp;
}

void sort (item *a, int n){
    for(int i = 0; i < n-1; i++)
        for(int j = i+1; j < n; j++)
            if(a[i].ppu < a[j].ppu)
                swap(&a[i], &a[j]);
}

void readFile (item **a, int *n, int *m){    
    FILE *f = fopen("CaiBalo1.txt", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, (*a)[i].name);
        (*a)[i].ppu = (float)(*a)[i].v / (*a)[i].w;
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
    fclose(f);
}

void printChart (item *a, int n){
    int total_val = 0, total_weight = 0;
    printf("|---|---------------------|-----------|-------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "Don gia","Phuong an");
	printf("|---|---------------------|-----------|-------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){        
        printf("| %-2d| %-20s|%11d|%7d|%7.2f|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].ppu, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|-------|---------|\n");	
	printf("Phuong an (theo thu tu DG giam dan): X(");
	for(int i=0; i<n-1; i++){
		printf("%d,", a[i].qty);
	}	
	printf("%d)\n", a[n-1].qty);
    printf("Tong trong luong = %5d\n", total_weight);
    printf("Tong gia tri     = %5d\n", total_val);
}

void greedy(item *a, int n, int m){
    for(int i = 0; i < n; i++){
        a[i].qty = m / a[i].w;
        m -= a[i].w*a[i].qty;
    }
}

int main (){
    int n = 0, m = 0;
    item *a;
    readFile(&a, &n, &m);
    sort(a, n);
    greedy(a, n, m);
    printChart(a, n);
    free(a);
}
----CÁI BALO2 GREADY-----
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int w, v, qty, max_qty;
    float ppu; //price per unit
    char name[25];    
} item;

void swap (item *a, item* b){
    item temp = *a;
    *a = *b;
    *b = temp;
}

void sort (item *a, int n){
    for(int i = 0; i < n-1; i++)
        for(int j = i+1; j < n; j++)
            if(a[i].ppu < a[j].ppu)
                swap(&a[i], &a[j]);
}

void readFile (item **a, int *n, int *m){    
    FILE *f = fopen("CaiBalo2.txt", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, &(*a)[i].max_qty, (*a)[i].name);
        (*a)[i].ppu = (float)(*a)[i].v / (*a)[i].w;
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
    fclose(f);
}

void printChart (item *a, int n){
    int total_val = 0, total_weight = 0;
	printf("|---|---------------------|-----------|-------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "Don gia","Phuong an");
	printf("|---|---------------------|-----------|-------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){
        printf("| %-2d| %-20s|%11d|%7d|%7.2f|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].ppu, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|-------|---------|\n");
	printf("Phuong an (theo thu tu DG giam dan): X(");
	for(int i=0; i<n-1; i++){
		printf("%d,", a[i].qty);
	}	
	printf("%d)\n", a[n-1].qty);
	printf("Tong trong luong = %5d\n", total_weight);
    printf("Tong gia tri     = %5d\n", total_val);
}

int min (int a, int b){
    return a < b ? a : b;
}

void greedy(item *a, int n, int m){
    for(int i = 0; i < n; i++){
        a[i].qty = min(m/a[i].w, a[i].max_qty);
        m -= a[i].w*a[i].qty;
    }
}

int main (){
    int n = 0, m = 0;
    item *a;
    readFile(&a, &n, &m);
    sort(a, n);
    greedy(a, n, m);
    printChart(a, n);    
}
-----BALO 3 GREDY---
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int w, v, qty;
    float ppu; //price per unit
    char name[25];    
} item;

void swap (item *a, item* b){
    item temp = *a;
    *a = *b;
    *b = temp;
}

void sort (item *a, int n){
    for(int i = 0; i < n-1; i++)
        for(int j = i+1; j < n; j++)
            if(a[i].ppu < a[j].ppu)
                swap(&a[i], &a[j]);
}

void readFile (item **a, int *n, int *m){    
    FILE *f = fopen("CaiBalo3.txt", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, (*a)[i].name);
        (*a)[i].ppu = (float)(*a)[i].v / (*a)[i].w;
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
    fclose(f);
}

void printChart (item *a, int n){
    int total_val = 0, total_weight = 0;
    printf("|---|---------------------|-----------|-------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "Don gia","Phuong an");
	printf("|---|---------------------|-----------|-------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){        
        printf("| %-2d| %-20s|%11d|%7d|%7.2f|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].ppu, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|-------|---------|\n");	
	printf("Phuong an (theo thu tu DG giam dan): X(");
	for(int i=0; i<n-1; i++){
		printf("%d,", a[i].qty);
	}	
	printf("%d)\n", a[n-1].qty);
    printf("Tong trong luong = %5d\n", total_weight);
    printf("Tong gia tri     = %5d\n", total_val);
}

void greedy(item *a, int n, int m){
    for(int i = 0; i < n; i++){
        if(m/a[i].w){
            a[i].qty = 1;
            m -= a[i].w;
        }
    }
}

int main (){
    int n = 0, m = 0;
    item *a;
    readFile(&a, &n, &m);
    sort(a, n);
    greedy(a, n, m);
    printChart(a, n);    
}
---tsp_gready---
#include<stdio.h>
#include <malloc.h>

#define MAX_N 100

typedef struct {
	float w;
	int first, last;
} edge;

void swap(edge *a, edge *b){
	edge temp = *a;
	*a = *b;
	*b = temp;
}

void sort(edge *e, int n){
	for(int i = 0; i < n-1; i++){
		for(int j = i+1; j < n; j++){
			if(e[i].w > e[j].w)
				swap(&e[i], &e[j]);
		}
	}
}

void readFile(edge **e, int *n){    
	FILE *f = fopen("TSP.txt", "r");
    *e = (edge*)malloc(sizeof(edge));
	fscanf(f, "%d", n);    
	int k = 0;
	for(int i = 0; i < *n; i++){
		for(int j = 0; j < *n; j++){
			if(j < i){
                *e = (edge*)realloc(*e, sizeof(edge)*(k+1));                
				fscanf(f, "%f", &(*e)[k].w);
				(*e)[k].first = j;
				(*e)[k].last = i;
				k++;
			} 
			else {
				float temp;
				fscanf(f, "%f", &temp);	
			}
		}	
	}
    fclose(f);
}

void printList(edge *e, int n){	
	for(int i = 0; i < n; i++){
		printf ("%3d   %c%c   %5.2f\n", i+1, e[i].first+97, e[i].last+97, e[i].w);
	}
}

void initForest(int parent[], int n){
	for(int i = 0; i < n; i++)
		parent[i] = i;
}

int findRoot(int parent[], int u){
	while(u != parent[u])
		u = parent[u];
	return u;
}

int isCycle (int r_u, int r_v){
	return r_u == r_v;
}

int threeLevelNode(edge *t, int n, edge newEdge){
    int countF = 1, countL = 1;
	for(int i = 0; i < n; i++){
		if(t[i].first == newEdge.first || t[i].last == newEdge.first)
			countF++;
		if(t[i].first == newEdge.last || t[i].last == newEdge.last)
			countL++;
        if(countF == 3 || countL == 3)
            return 1;
	}
    return 0;
}

void greedy(edge *e, int n, int m){
	edge *t;
    float price = 0;
	t = (edge*)malloc(sizeof(edge));
	int parent[MAX_N];
	initForest(parent, n);
    int k = 0;
    for(int i = 0; i < m && k < n; i++){		
        if(!threeLevelNode(t, k, e[i])){
            int r_u = findRoot(parent, e[i].first);
            int r_v = findRoot(parent, e[i].last);
            if(!isCycle(r_u, r_v) || (isCycle(r_u, r_v) && k == n-1)){
                t = (edge*)realloc(t, sizeof(edge)*(k+1));
                t[k++] = e[i];
                parent[r_v] = r_u;
                price += e[i].w;
            }
        }
	}
	printList(t, k);
    printf("Tong do dai cac canh: %.2f", price);
}

int main(){
	int n = 0;
	edge *e;
	readFile(&e, &n);
	int m = n*(n-1)/2;
	printf("Cac canh da cho:\n");
	printList(e, m);
	sort(e, m);
	printf("\nCac canh sau khi sap xep:\n");	
	printList(e, m);	
	printf("\nPhuong an:\n");	
	greedy(e, n, m);
    free(e);
}
-----balo1 nhanh can-----
#include <stdio.h>
#include <malloc.h>
#include <string.h>

#define MAX_N 100

typedef struct {
    int w, v, qty;
    float ppu; //price per unit
    char name[25];    
} item;

void swap (item *a, item* b){
    item temp = *a;
    *a = *b;
    *b = temp;
}

void sort (item *a, int n){
    for(int i = 0; i < n-1; i++)
        for(int j = i+1; j < n; j++)
            if(a[i].ppu < a[j].ppu)
                swap(&a[i], &a[j]);
}

void readFile (item **a, int *n, int *m){
    FILE *f = fopen("CaiBalo1.txt", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, (*a)[i].name);
        (*a)[i].ppu = (float)(*a)[i].v / (*a)[i].w;
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
}

void printChart (item *a, int n, int m){
    int total_val = 0, total_weight = 0;
    printf("|---|---------------------|-----------|-------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "Don gia","Phuong an");
	printf("|---|---------------------|-----------|-------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){        
        printf("| %-2d| %-20s|%11d|%7d|%7.2f|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].ppu, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|-------|---------|\n");	
	printf("Phuong an (theo thu tu DG giam dan): X(");
	for(int i=0; i<n-1; i++){
		printf("%d,", a[i].qty);
	}	
	printf("%d)\n", a[n-1].qty);
	printf("Trong luong cua ba lo = %5d\n",m);
    printf("Tong trong luong      = %5d\n", total_weight);
    printf("Tong gia tri          = %5d\n", total_val);
}

void solve(item *a, int n, int p_val, int m, int x[], int i, float *final_res){
	for(int j = m/a[i].w; j >= 0; j--){
		float cur_val, remain, ubound;
		cur_val= p_val + j*a[i].v;
		remain = m - j*a[i].w;
		ubound = cur_val + remain*a[i+1].ppu;
		if(ubound > *final_res){
			x[i] = j;			
			if((i == n-1 || remain == 0) && cur_val > *final_res){
				*final_res = cur_val;
				for(int k = 0; k < n; k++){
					a[k].qty = x[k];
				}		
			}
			else
				solve(a, n, cur_val, remain, x, i+1, final_res);
		}		
		x[i] = 0;	
	}
}

int main (){
	item *a;
	int n, m, x[MAX_N];
	float final_res = 0;
	readFile(&a, &n, &m);
	sort(a, n);	
	solve(a, n, 0, m, x, 0, &final_res);
	printChart(a, n, m);
}
----balo 2 nhanh can---
#include <stdio.h>
#include <malloc.h>
#include <string.h>

#define MAX_N 100

typedef struct {
    int w, v, qty, max_qty;
    float ppu; //price per unit
    char name[25];    
} item;

void swap (item *a, item* b){
    item temp = *a;
    *a = *b;
    *b = temp;
}

void sort (item *a, int n){
    for(int i = 0; i < n-1; i++)
        for(int j = i+1; j < n; j++)
            if(a[i].ppu < a[j].ppu)
                swap(&a[i], &a[j]);
}

void readFile (item **a, int *n, int *m){    
    FILE *f = fopen("CaiBalo2.txt", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, &(*a)[i].max_qty, (*a)[i].name);
        (*a)[i].ppu = (float)(*a)[i].v / (*a)[i].w;
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
}

void printChart (item *a, int n, int m){
    int total_val = 0, total_weight = 0;
	printf("|---|---------------------|-----------|-------|--------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-8s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "So luong", "Don gia","Phuong an");
	printf("|---|---------------------|-----------|-------|--------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){
        printf("| %-2d| %-20s|%11d|%7d|%8d|%7.2f|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].max_qty, a[i].ppu, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|--------|-------|---------|\n");
	printf("Phuong an (theo thu tu DG giam dan): X(");
	for(int i=0; i<n-1; i++){
		printf("%d,", a[i].qty);
	}	
	printf("%d)\n", a[n-1].qty);
	printf("Trong luong cua ba lo = %5d\n", m);
	printf("Tong trong luong      = %5d\n", total_weight);
    printf("Tong gia tri          = %5d\n", total_val);
}

int min(int a, int b){
	return a < b ? a : b;
}

void solve(item *a, int n, int p_val, int m, int x[], int i, float *final_res){
	for(int j = min(a[i].max_qty, m/a[i].w); j >= 0; j--){
		float cur_val, remain, ubound;
		cur_val= p_val + j*a[i].v;
		remain = m - j*a[i].w;
		ubound = cur_val + remain*a[i+1].ppu;
		if(ubound > *final_res){
			x[i] = j;			
			if((i == n-1 || remain == 0) && cur_val > *final_res){
				*final_res = cur_val;
				for(int k = 0; k < n; k++){
					a[k].qty = x[k];
				}		
			}
			else
				solve(a, n, cur_val, remain, x, i+1, final_res);
		}		
		x[i] = 0;	
	}
}


int main (){
	item *a;
	int n, m, x[MAX_N];
	float final_res = 0;
	readFile(&a, &n, &m);	
	sort(a, n);	
	solve(a, n, 0, m, x, 0, &final_res);
	printChart(a, n, m);
}
---balo3_nhanhcan---
#include <stdio.h>
#include <malloc.h>
#include <string.h>

#define MAX_N 100

typedef struct {
    int w, v, qty;
    float ppu; //price per unit
    char name[25];    
} item;

void swap (item *a, item* b){
    item temp = *a;
    *a = *b;
    *b = temp;
}

void sort (item *a, int n){
    for(int i = 0; i < n-1; i++)
        for(int j = i+1; j < n; j++)
            if(a[i].ppu < a[j].ppu)
                swap(&a[i], &a[j]);
}

void readFile (item **a, int *n, int *m){
    FILE *f = fopen("CaiBalo3.txt", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, (*a)[i].name);
        (*a)[i].ppu = (float)(*a)[i].v / (*a)[i].w;
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
}

void printChart (item *a, int n, int m){
    int total_val = 0, total_weight = 0;
    printf("|---|---------------------|-----------|-------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "Don gia","Phuong an");
	printf("|---|---------------------|-----------|-------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){        
        printf("| %-2d| %-20s|%11d|%7d|%7.2f|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].ppu, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|-------|---------|\n");	
	printf("Phuong an (theo thu tu DG giam dan): X(");
	for(int i=0; i<n-1; i++){
		printf("%d,", a[i].qty);
	}	
	printf("%d)\n", a[n-1].qty);
	printf("Trong luong cua ba lo = %5d\n",m);
    printf("Tong trong luong      = %5d\n", total_weight);
    printf("Tong gia tri          = %5d\n", total_val);
}

void solve(item *a, int n, int p_val, int m, int x[], int i, float *final_res){
	for(int j = (m/a[i].w > 0); j >= 0; j--){
		float cur_val, remain, ubound;
		cur_val= p_val + j*a[i].v;
		remain = m - j*a[i].w;
		ubound = cur_val + remain*a[i+1].ppu;
		if(ubound > *final_res){
			x[i] = j;			
			if((i == n-1 || remain == 0) && cur_val > *final_res){
				*final_res = cur_val;
				for(int k = 0; k < n; k++){
					a[k].qty = x[k];
				}		
			}
			else
				solve(a, n, cur_val, remain, x, i+1, final_res);
		}		
		x[i] = 0;	
	}
}

int main (){
	item *a;
	int n, m, x[MAX_N];
    float final_res = 0;
	readFile(&a, &n, &m);
	sort(a, n);
	solve(a, n, 0, m, x, 0, &final_res);
	printChart(a, n, m);
}
----tsp_nhanh_can----
#include <stdio.h>
#include <malloc.h>

#define MAX_N 100
#define MIN_F 3.4e38

typedef struct {
    float length;
    int first, last, mark;
} Edge;

typedef struct {
    int n;
    Edge E[MAX_N][MAX_N];
} Graph;

void readFile(Graph *G){
    FILE *f = fopen("TSP1.txt", "r");
    fscanf(f,"%d", &G->n);
    for(int i = 0; i < G->n; i++){
        for(int j = 0; j < G->n; j++){
            fscanf(f, "%f", &G->E[i][j].length);
            G->E[i][j].first = i;
            G->E[i][j].last  = j;
            G->E[i][j].mark  = 0;
        }
    }
    fclose(f);
}

void printGraph(Graph *G){
    printf("Ma tran trong so cua do thi:\n");
    for(int i = 0; i < G->n; i++){
        for(int j = 0; j < G->n; j++){
            printf(" %c%c =%5.2f  ", G->E[i][j].first+97, G->E[i][j].last+97, G->E[i][j].length);
        }
        printf("\n");
    }
}

void printResult(Edge x[], int n){
    printf("Phuong an tim duoc:\n");
    for(int i = 0; i < n; i++){
        printf("  Canh %c%c = %5.2f\n", x[i].first+97, x[i].last+97, x[i].length);        
    }
    float sum = 0;
    printf("Chu trinh:\n  ");
    for(int i = 0; i < n; i++){
        printf("%c -> ", x[i].first+97);
        sum += x[i].length;
    }
    printf("%c\n", x[0].first+97);
    printf("Tong do dai cac canh cua chu trinh = %5.2f\n\n", sum);
}

int isCycle(Edge x[], int n, int next){
    for(int i = 0; i < n; i++){
        if(next == x[i].first)
            return 1;
    }
    return 0;
}

float lowerBound(Graph *G, float cost, int level){
    float min_Edge = MIN_F;
    for(int i = 0; i < G->n; i++){
        for(int j = 0; j < G->n; j++){
            if(i != j && !G->E[i][j].mark && G->E[i][j].length < min_Edge)
                min_Edge = G->E[i][j].length;
        }
    }
    return cost+(G->n - level)*min_Edge;
}

Edge result[MAX_N];

void updateResult(Graph *G, float cost, float *final_cost, Edge x[]){
    int n = G->n;
    x[n-1] = G->E[x[n-2].last][x[0].first];
    cost += x[n-1].length;
    if(cost < *final_cost){
        *final_cost = cost;
        for(int i = 0; i < n; i++){
            result[i] = x[i];
        }
    }
}

void solve(Graph *G, int i, int current, float p_cost, float *final_cost, Edge x[]){    
    int n = G->n;
    for(int next = 0; next < n; next++){
        if(current != next && !G->E[current][next].mark && !isCycle(x, i, next)){
            float cost, lbound;
            cost = p_cost + G->E[current][next].length;
            lbound = lowerBound(G, cost, i+1);
            if(lbound < *final_cost){
                x[i] = G->E[current][next];
                G->E[current][next].mark = 1;
                G->E[next][current].mark = 1;
                if(i == n-2)
                    updateResult(G, cost, final_cost, x);
                else
                    solve(G, i+1, next, cost, final_cost, x);
            }
            G->E[current][next].mark = 0;
            G->E[next][current].mark = 0;
        }
    }
}

void reset(Graph *G){
    for(int i = 0; i < G->n; i++){
        for(int j = 0; j < G->n; j++){
            G->E[i][j].mark = 0;
        }
    }
}

int main(){
    Graph G;
    readFile(&G);    
    printf("TSP su dung thuat toan NHANH CAN:\n\n");
    Edge x[MAX_N];    
    while(1){
        printGraph(&G);
        reset(&G);
        float final_cost = MIN_F;
        char s;
        do {
            printf("Chon thanh pho xuat phat (a,.., e): ");
            scanf("\n%c", &s);
        } while (s < 'a' || s > 'e');
        solve(&G, 0, s-97, 0, &final_cost, x);
        printResult(result, G.n);        
        do{
            printf("Tiep tuc (Y/N)? ");
            scanf("\n%c", &s);
            if(s == 'n' || s == 'N')
                return 0;
        } while(s != 'y' && s != 'Y');
     
    }
        
}
----balo1-quyhoachdong---
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int w, v, qty;
    char name[25];    
} item;

typedef int table[50][100];

void readFile (item **a, int *n, int *m){    
    FILE *f = fopen("QHD_CaiBalo.inp", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, (*a)[i].name);
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
    fclose(f);
}

void printResult (item *a, int n, int m){
    int total_val = 0, total_weight = 0;
    printf("Phuong an Cai balo 1 su dung Quy hoach dong:\n");
    printf("|---|---------------------|-----------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "Phuong an");
	printf("|---|---------------------|-----------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){        
        printf("| %-2d| %-20s|%11d|%7d|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|---------|\n");	
    printf("Trong luong cua ba lo = %5d\n", m);
    printf("Tong trong luong      = %5d\n", total_weight);
    printf("Tong gia tri          = %5d\n", total_val);
}

void createTable(item *a, int n, int m, table F, table X){
    for(int i = 0; i <= m; i++){
        X[0][i] = i/a[0].w;
        F[0][i] = X[0][i] * a[0].v;
    }
    for(int i = 1; i < n; i++){
        for(int j = 0; j <= m; j++){
            F[i][j] = F[i-1][j];
            X[i][j] = 0;
            int max_qty = j/a[i].w;
            for(int k = 1; k <= max_qty; k++){
                if(k*a[i].v + F[i-1][j-k*a[i].w] > F[i][j]){
                    F[i][j] = k*a[i].v + F[i-1][j-k*a[i].w];
                    X[i][j] = k;
                }
            }
        }
    }
}

void printTable(int n, int m, table F, table X){
    printf("Bang quy hoach dong:\n");   
	for(int i = 0; i < n+4; i++){
		if(i == 0 || i == 2 || i == n+3){
			printf("|---");
    		for(int i = 0; i <= m; i++){
        		printf("|-----");
    		}			
		}
		else if(i == 1){
			printf("|k\\V");
    		for(int i = 0; i <= m; i++){	
        		printf("|  %-3d", i);
    		}    		
		}
		else{
        	printf("| %-2d", i+1);
			for(int j = 0; j <= m; j++){
			 	printf("|%2d %2d",F[i][j], X[i][j]);
    	    }
		}
		printf("|\n");
	}
	printf("\n");
}

void searchTable(item *a, int n, int m, table X){
    for(int i = n-1; i >= 0; i--){
        a[i].qty = X[i][m];
        m -= X[i][m]*a[i].w;
    }
}

int main (){
    int n = 0, m = 0;    
    item *a;
    table F, X;
    readFile(&a, &n, &m);
    createTable(a, n, m, F, X);
    printTable(n, m, F, X);
    searchTable(a, n, m, X);
    printResult(a, n, m);
    free(a);
}
----balo2-quyhoachdong---
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int w, v, qty, max_qty;
    char name[25];    
} item;

typedef int table[50][100];

void readFile (item **a, int *n, int *m){    
    FILE *f = fopen("QHD_CaiBalo2.inp", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, &(*a)[i].max_qty, (*a)[i].name);
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
}

void printResult(item *a, int n, int m){
    int total_val = 0, total_weight = 0;
    printf("Phuong an Cai balo 2 su dung Quy hoach dong:\n");
	printf("|---|---------------------|-----------|-------|--------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-8s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "So luong", "Phuong an");
	printf("|---|---------------------|-----------|-------|--------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){
        printf("| %-2d| %-20s|%11d|%7d|%8d|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].max_qty, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|--------|---------|\n");
	printf("Phuong an (theo thu tu DG giam dan): X(");
	for(int i=0; i<n-1; i++){
		printf("%d,", a[i].qty);
	}	
	printf("%d)\n", a[n-1].qty);
	printf("Trong luong cua ba lo = %5d\n", m);
	printf("Tong trong luong      = %5d\n", total_weight);
    printf("Tong gia tri          = %5d\n", total_val);
}

int min(int a, int b){
    return a < b ? a : b;
}

void createTable(item *a, int n, int m, table F, table X){
    for(int i = 0; i <= m; i++){
        X[0][i] = min(i/a[0].w, a[0].max_qty);
        F[0][i] = X[0][i] * a[0].v;
    }
    for(int i = 1; i < n; i++){
        for(int j = 0; j <= m; j++){
            F[i][j] = F[i-1][j];
            X[i][j] = 0;
            int max_qty = min(j/a[i].w, a[i].max_qty);
            for(int k = 1; k <= max_qty; k++){
                if(k*a[i].v + F[i-1][j-k*a[i].w] > F[i][j]){
                    F[i][j] = k*a[i].v + F[i-1][j-k*a[i].w];
                    X[i][j] = k;
                }
            }

        }
    }
}

void printTable(int n, int m, table F, table X){
    
}

void searchTable(item *a, int n, int m, table X){
    for(int i = n-1; i >= 0; i--){
        a[i].qty = X[i][m];
        m -= X[i][m]*a[i].w;
    }
}

int main (){
    int n = 0, m = 0;    
    item *a;
    table F, X;
    readFile(&a, &n, &m);
    createTable(a, n, m, F, X);
    printTable(n, m, F, X);
    searchTable(a, n, m, X);
    printResult(a, n, m);
    free(a);
}
----balo3-quyhoachdong---
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int w, v, qty;
    char name[25];    
} item;

typedef int table[50][100];

void readFile (item **a, int *n, int *m){    
    FILE *f = fopen("QHD_CaiBalo.inp", "r");
    *a = (item*)malloc(sizeof(item));
    fscanf(f, "%d", m);
    int i = 0;    
    while (!feof(f)){
        (*a) = realloc(*a, sizeof(item)*(i+1));
        fscanf(f, "\n%d %d %[^\r\n]s", &(*a)[i].w, &(*a)[i].v, (*a)[i].name);
        (*a)[i].qty = 0;
        i++;
    }
    *n = i;
    fclose(f);
}

void printResult (item *a, int n, int m){
    int total_val = 0, total_weight = 0;
    printf("Phuong an Cai balo 3 su dung Quy hoach dong:\n");
    printf("|---|---------------------|-----------|-------|---------|\n");
	printf("|%-3s|%-21s|%-11s|%-7s|%-9s|\n", "STT", "     Ten do vat", "Trong luong", "Gia tri", "Phuong an");
	printf("|---|---------------------|-----------|-------|---------|\n");
	for(int i = 0, k = 1; i < n; i++){        
        printf("| %-2d| %-20s|%11d|%7d|%9d|\n", k++, a[i].name, a[i].w, a[i].v, a[i].qty);
        total_val += a[i].v*a[i].qty;
        total_weight += a[i].w*a[i].qty;
	}	
	printf("|---|---------------------|-----------|-------|---------|\n");	
    printf("Trong luong cua ba lo = %5d\n", m);
    printf("Tong trong luong      = %5d\n", total_weight);
    printf("Tong gia tri          = %5d\n", total_val);
}

void createTable(item *a, int n, int m, table F, table X){
    for(int i = 0; i <= m; i++){
        X[0][i] = (i >= a[0].w);
        F[0][i] = X[0][i] * a[0].v;
    }
    for(int i = 1; i < n; i++){
        for(int j = 0; j <= m; j++){
            F[i][j] = F[i-1][j];
            X[i][j] = 0;
            if(j >= a[i].w && F[i][j] < a[i].v + F[i-1][j-a[i].w]){
                F[i][j] = a[i].v + F[i-1][j-a[i].w];
                X[i][j] = 1;                
            }
        }
    }
}

void printTable(int n, int m, table F, table X){
    printf("Bang quy hoach dong:\n");   
	for(int i = 0; i < n+4; i++){
		if(i == 0 || i == 2 || i == n+3){
			printf("|---");
    		for(int i = 0; i <= m; i++){
        		printf("|-----");
    		}			
		}
		else if(i == 1){
			printf("|k\\V");
    		for(int i = 0; i <= m; i++){	
        		printf("|  %-3d", i);
    		}    		
		}
		else{
        	printf("| %-2d", i+1);
			for(int j = 0; j <= m; j++){
			 	printf("|%2d %2d",F[i][j], X[i][j]);
    	    }
		}
		printf("|\n");
	}
	printf("\n");
}

void searchTable(item *a, int n, int m, table X){
    for(int i = n-1; i >= 0; i--){
        a[i].qty = X[i][m];
        m -= X[i][m]*a[i].w;
    }
}

int main (){
    int n = 0, m = 0;    
    item *a;
    table F, X;
    readFile(&a, &n, &m);
    createTable(a, n, m, F, X);
    printTable(n, m, F, X);
    searchTable(a, n, m, X);
    printResult(a, n, m);
    free(a);
}